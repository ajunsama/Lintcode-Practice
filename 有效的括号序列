class Solution {
public:
    /**
     * @param s A string
     * @return whether the string is a valid parentheses
     */
    bool isValidParentheses(string& s) {
        // Write your code here
        if (s.empty()) return false;
        stack<char> stack;
        bool flag=true;
        for (int i = 0; i< s.length() ; i++) {
            if (s[i]=='(' || s[i] == '[' || s[i] == '{') {
                stack.push(s[i]);
            }else if (s[i]==')'){
                if (!stack.empty() && stack.top()=='(') {
                    stack.pop();
                }else {
                    flag = false;
                    break;
                }
            }else if (s[i]==']'){
                if (!stack.empty() && stack.top()=='[') {
                    stack.pop();
                }else {
                    flag = false;
                    break;
                }
            }else if (s[i]=='}'){
                if (!stack.empty() && stack.top()=='{') {
                    stack.pop();
                }else {
                    flag = false;
                    break;
                }
            }
        }
        if (!stack.empty()) {
            flag=false;
        }
        return flag;
    }
};
